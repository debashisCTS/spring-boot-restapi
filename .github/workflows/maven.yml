# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "feature*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

     # Get latest commit hash of main branch
    - name: Get main branch commit hash
      if: github.ref_name == 'main'
      run: echo "SONAR_PROJECT_VERSION=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
     
     # For feature branch comparision fetch main from origin as checkput step shallow clone current branch
    - name: Fetch base branch (main) for Sonar differential analysis
      run: git fetch origin main

    # For PRs and regular branches (main, develop) — standard SonarCloud scan
    - name: SonarCloud Scan
      if: github.event_name == 'pull_request' || github.ref_name == 'main' 
      uses: SonarSource/sonarcloud-github-action@v2
      with:
          organization: debashistest
          projectKey: debashisCTS_spring-boot-restapi
          args: -Dsonar.verbose=true -Dsonar.projectVersion=${{ env.SONAR_PROJECT_VERSION }}
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

     

      # For direct pushes to feature/* — manual scan with branch.target=develop
    - name: SonarCloud Scan for Feature Branches 
      if: startsWith(github.ref_name, 'feature')
      run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=debashisCTS_spring-boot-restapi \
            -Dsonar.organization=debashistest \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.branch.name=${{ github.ref_name }} \
            -Dsonar.branch.target=main \
            -Dsonar.verbose=true
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
